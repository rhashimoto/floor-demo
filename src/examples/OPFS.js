import*as VFS from"../VFS.js";function log(...t){console.log(...t)}let idb;log.debug=function(...t){console.debug(...t)};const idbReady=new Promise((function(t,i){const s=indexedDB.open("FLOORIndex",1);s.addEventListener("upgradeneeded",(()=>{s.result.createObjectStore("tx",{keyPath:["path","txId"]})})),s.addEventListener("success",(()=>{t(idb=s.result)})),s.addEventListener("error",(()=>{i(s.error)}))}));export class File{static openFilesById=new Map;isReady;#t;#i;#s=null;#e="normal";#o="full";#a=128;#n=0;#h=0;#r=0;#c=0;#l=!1;get#d(){return this.#r+8}#u=null;#x=new Map;#w=new Map;#g=new Set;#f=null;#F=0;#S=new Map;#p;#y=VFS.SQLITE_LOCK_NONE;_readLock=null;_writeLock=null;constructor(t,i,s){File.openFilesById.set(i,this),this.#t=t,this.#i=s,this.isReady=(async()=>{const t=!!(this.#i&VFS.SQLITE_OPEN_CREATE),[i,s]=await getPathComponents(this.#t,t);if(!i)throw new DOMException(`invalid path ${this.#t}`,"NotFoundError");const e=await i.getFileHandle(s,{create:t});if(this.#s=await e.createSyncAccessHandle({mode:"readwrite-unsafe"}),this.#i&VFS.SQLITE_OPEN_MAIN_DB){const[t,i]=await getPathComponents(this.#t+"-floor",!0),s=await t.getFileHandle(i,{create:!0});this.#u=await s.createSyncAccessHandle({mode:"readwrite-unsafe"}),await idbReady;try{await this.#V("read",{mode:"shared"}),await this.#m(0);const t=new DataView(new ArrayBuffer(2));if(this.#s.read(t,{at:16}),this.#r=t.getUint16(0,!1),1===this.#r&&(this.#r=65536),log.debug(`dbPageSize=${this.#r}`),!this.#r)return;const i=idb.transaction("tx","readonly"),s=IDBKeyRange.bound([this.#t],[this.#t,[]]),e=await idbX(i.objectStore("tx").getAll(s));for(const t of e)for(const[i,s]of t.pages??[]){console.log(`verifying page ${i}, index ${s}`);const e=new Uint32Array(new ArrayBuffer(this.#d));this.#u.read(e,{at:s*this.#d});const o=e.subarray(0,this.#r/4),a=e.subarray(this.#r/4);if(this.#k(t.salt,i,o).some(((t,i)=>t!==a[i]))){console.warn(`WAL file is corrupt at txId=${t.txId}`),await this.#V("write",{mode:"exclusive"});const i=idb.transaction("tx","readwrite"),s=await idbX(i.objectStore("tx").get([this.#t,t.txId]));if(s?.salt.every(((i,s)=>i===t.salt[s]))){console.warn(`deleting WAL transactions from txId=${t.txId}`);const s=IDBKeyRange.bound([this.#t,t.txId],[this.#t,[]]);await idbX(i.objectStore("tx").delete(s))}return}}}finally{this.#f?.(),this._writeLock?.(),this._readLock?.()}}})()}async xClose(t){log("xClose",this.#t);try{if(File.openFilesById.delete(t),this.#i&VFS.SQLITE_OPEN_MAIN_DB&&(await this.#V("read",{mode:"exclusive"}),await this.#V("write",{mode:"exclusive"}),await this.#$(!0)),this.#i&VFS.SQLITE_OPEN_DELETEONCLOSE){const[t,i]=await getPathComponents(this.#t,!1);await t.removeEntry(i)}return VFS.SQLITE_OK}catch(t){return console.error(t),VFS.SQLITE_IOERR}finally{this._writeLock?.(),this._readLock?.(),this.#s?.close(),this.#u?.close()}}xRead(t,i,s,e){log("xRead",this.#t,s,e);try{if(this.#i&VFS.SQLITE_OPEN_MAIN_DB&&this.#r&&(this.#S.size||this.#x.size)){const t=Math.trunc(e/this.#r)+1,o=e%this.#r,a=this.#S.get(t)??this.#x.get(t),n=a?.index??-1;if(n>=0){log.debug(`read page ${t} from WAL ${n}`);const e=n*this.#d+o;return this.#u.read(i,{at:e})!==s?VFS.SQLITE_IOERR_SHORT_READ:VFS.SQLITE_OK}}return this.#s.read(i,{at:e})!==s?VFS.SQLITE_IOERR_SHORT_READ:(this.#i&VFS.SQLITE_OPEN_MAIN_DB&&!this.#r&&e<=16&&e+s>=18&&(this.#r=i.getUint16(16-e,!1),1===this.#r&&(this.#r=65536)),VFS.SQLITE_OK)}catch(t){return console.error(t),VFS.SQLITE_IOERR_READ}}xWrite(t,i,s,e){log("xWrite",this.#t,s,e);try{if(this.#r){let t;console.assert(s===this.#r),this.#F||this.#b();const o=Math.trunc(e/this.#r)+1;if(this.#S.has(o)?t=this.#S.get(o).index:this.#g.size?(t=this.#g.values().next().value,this.#g.delete(t)):t=this.#h++,log.debug(`write page ${o} to WAL ${t}`),this.#u.write(i,{at:t*this.#d})!==s)return VFS.SQLITE_IOERR_WRITE;const a=this.#k(this.#p,o,i);return log.debug(`digest=${a.reduce(((t,i)=>t+i.toString(16).padStart(8,"0")),"")}`),8!==this.#u.write(a)?VFS.SQLITE_IOERR_WRITE:(this.#S.set(o,{txId:this.#n,index:t}),this.#F=Math.max(this.#F,o),VFS.SQLITE_OK)}return this.#i&VFS.SQLITE_OPEN_MAIN_DB&&(console.assert(0===this.#n&&0===e),this.#c=1,this.#r=i.getUint16(16,!1),1===this.#r&&(this.#r=65536)),this.#s.write(i,{at:e})!==s?VFS.SQLITE_IOERR_WRITE:(this.#l=!0,VFS.SQLITE_OK)}catch(t){return console.error(t),VFS.SQLITE_IOERR_WRITE}}xTruncate(t,i){log("xTruncate",this.#t,i);try{return this.#i&VFS.SQLITE_OPEN_MAIN_DB?(console.assert(this.#r>0),this.#F=Math.trunc(i/this.#r)):(this.#s.truncate(i),this.#l=!0),VFS.SQLITE_OK}catch(t){return console.error(t),VFS.SQLITE_IOERR}}xSync(t,i){log("xSync",this.#t,"0x"+i.toString(16));try{return this.#l&&(this.#s.flush(),this.#l=!1),VFS.SQLITE_OK}catch(t){return console.error(t),VFS.SQLITE_IOERR}}xFileSize(t,i){log("xFileSize",this.#t);try{const t=this.#r*this.#F||this.#r*this.#c||this.#s.getSize();return i.setBigInt64(0,BigInt(t),!0),log.debug(`size=${t}`),VFS.SQLITE_OK}catch(t){return console.error(t),VFS.SQLITE_IOERR}}async xLock(t,i){log("xLock",this.#t,i);try{switch(i){case 1:console.assert(this.#y===VFS.SQLITE_LOCK_NONE,`lockState=${this.#y}`),"exclusive"===this.#e?(await this.#V("read",{mode:"exclusive"}),await this.#V("write",{mode:"exclusive"})):await this.#V("read",{mode:"shared"}),await this.#C(),await this.#m(this.#n);break;case 2:console.assert(this.#y===VFS.SQLITE_LOCK_SHARED,`lockState=${this.#y}`),this._writeLock||await this.#V("write",{mode:"exclusive"});const t=idb.transaction("tx","readonly");if(await idbX(t.objectStore("tx").getKey([this.#t,this.#n])))return this._writeLock(),VFS.SQLITE_BUSY;this.#f();break;case 4:console.assert(this.#y===VFS.SQLITE_LOCK_RESERVED,`lockState=${this.#y}`);break;default:throw new Error(`unexpected lock state ${i}`)}return this.#y=i,VFS.SQLITE_OK}catch(t){return console.error(t),VFS.SQLITE_IOERR}}xUnlock(t,i){log("xUnlock",this.#t,i);try{switch(i){case 1:console.assert(this.#y>VFS.SQLITE_LOCK_SHARED,`lockState=${this.#y}`),this._writeLock();break;case 0:console.assert(this.#y===VFS.SQLITE_LOCK_SHARED,`lockState=${this.#y}`),this._writeLock?.(),this._readLock(),this.#f?.();break;default:throw new Error(`unexpected unlock state ${i}`)}return this.#y=i,VFS.SQLITE_OK}catch(t){return console.error(t),VFS.SQLITE_IOERR}}async xCheckReservedLock(t,i){log("xCheckReservedLock",this.#t);try{const t=await new Promise((t=>{navigator.locks.request(this.#t+"-write",{ifAvailable:!0},t)}));return i.setUint32(0,t?1:0,!0),VFS.SQLITE_OK}catch(t){return console.error(t),VFS.SQLITE_IOERR}}async xFileControl(t,i,s){try{switch(i){case 14:const t=this.#A(s,4),e=this.#A(s,8);switch(log("xFileControl",this.#t,`PRAGMA ${t} ${e}`),t.toLowerCase()){case"locking_mode":"exclusive"===e?.toLowerCase()?this.#e="exclusive":this.#e=e;break;case"synchronous":switch(e.toLowerCase()){case"0":case"off":this.#o="off";break;case"1":case"normal":this.#o="normal";break;default:this.#o=e.toLowerCase()}break;case"wal_autocheckpoint":e?.match(/^[0-9]+$/)&&(this.#a=parseInt(e),log.debug(`ckptThreshold=${this.#a}`));break;case"wal_checkpoint":if(this.#F)return console.error("cannot checkpoint within a transaction"),VFS.SQLITE_MISUSE;try{const t=e?.toLowerCase();"full"===t||"truncate"===t?(await this.#V("read",{mode:"exclusive"}),await this.#V("write",{mode:"exclusive"})):await this.#V("read",{mode:"shared"}),await this.#C(),await this.#$("truncate"===t)}finally{this._writeLock?.(),this._readLock?.()}return VFS.SQLITE_OK}return VFS.SQLITE_NOTFOUND;case 21:log("xFileControl",this.#t,"SYNC"),console.assert(this.#F),await this.#I();break;case 31:return log("xFileControl",this.#t,"BEGIN_ATOMIC_WRITE"),VFS.SQLITE_OK;case 32:return log("xFileControl",this.#t,"COMMIT_ATOMIC_WRITE"),VFS.SQLITE_OK;case 33:return log("xFileControl",this.#t,"ROLLBACK_ATOMIC_WRITE"),await this.#v(),VFS.SQLITE_OK;default:return log("xFileControl",this.#t,i),VFS.SQLITE_NOTFOUND}}catch(t){return console.error(t),VFS.SQLITE_IOERR}}xSectorSize(t){return log("xSectorSize",this.#t,4096),4096}xDeviceCharacteristics(t){return log("xDeviceCharacteristics",this.#t),0|VFS.SQLITE_IOCAP_BATCH_ATOMIC|VFS.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN}static async xOpen(t,i,s,e,o){log("xOpen",i,s,"0x"+e.toString(16));try{i=i||"tmp-"+Math.random().toString(36).slice(2);const t=new File(i,s,e);return await t.isReady,o.setUint32(0,e,!0),VFS.SQLITE_OK}catch(t){return console.error(t),"NotFoundError"===t.name?VFS.SQLITE_CANTOPEN:VFS.SQLITE_IOERR}}static async xDelete(t,i,s){log("xDelete",i,s);try{const[t,s]=await getPathComponents(i,!1);return await t.removeEntry(s),VFS.SQLITE_OK}catch(t){return console.error(t),VFS.SQLITE_IOERR}}static async xAccess(t,i,s,e){log("xAccess",i,"0x"+s.toString(16));try{const[t,s]=await getPathComponents(i,!1);await t.getFileHandle(s),e.setUint32(0,1,!0)}catch(t){if("NotFoundError"!==t.name)return console.error(t),VFS.SQLITE_IOERR;e.setUint32(0,0,!0)}return VFS.SQLITE_OK}async#$(t){const i=(await navigator.locks.query()).held.filter((({name:t})=>t.startsWith(this.#t+"-tx#-"))).map((({name:t})=>{const i=t.match(/tx#-([0-9a-zA-Z]+)$/)?.[1];return parseInt(i,16)})).sort()[0]??1/0;log.debug(`checkpoint WAL up to txCount=${i}`);const s=[];for(const[t,e]of this.#w){if(!(t<i))break;s.push([t,e])}s.length&&"off"!==this.#o&&this.#u.flush();const e=new Set,o=new Uint8Array(this.#r);for(const[t,i]of s.reverse()){for(const{page:s,index:a}of i){e.has(s)||(log.debug(`checkpoint txId=${t} page=${s} index=${a}`),this.#u.read(o,{at:a*this.#d}),this.#s.write(o,{at:(s-1)*this.#r}),e.add(s));const i=this.#x.get(s);i?.txId===t&&(console.assert(i.index===a),this.#x.delete(s)),this.#g.add(a)}this.#w.delete(t)}"off"!==this.#o&&this.#s.flush();const a=idb.transaction("tx","readwrite"),n=new Promise(((t,i)=>{a.addEventListener("complete",t),a.addEventListener("error",i)})),h=IDBKeyRange.bound([this.#t],[this.#t,i-1]);await idbX(a.objectStore("tx").delete(h)),this.#x.size?a.commit():(t&&(this.#h=0,this.#g.clear()),await idbX(a.objectStore("tx").put({path:this.#t,txId:this.#n++,nFrames:this.#h,dbPageCount:this.#c})),a.commit(),t&&(log.debug("truncating WAL file"),await n,this.#u.truncate(0))),log.debug(`checkpoint complete, WAL has ${this.#w.size} tx ${this.#g.size} free frames`)}#k(t,i,s){const e=new DataView(new ArrayBuffer(16));return e.setBigUint64(0,t,!0),e.setBigUint64(8,BigInt(i),!0),(new FletcherChecksum).update(new Uint32Array(e.buffer)).update(new Uint32Array(s.buffer,s.byteOffset,s.byteLength/4)).digest()}#A(t,i){const s=t.getUint32(i,!0);if(s){const i=new Uint8Array(t.buffer,s);return(new TextDecoder).decode(i.subarray(0,i.indexOf(0)))}return null}#V(t,i){return new Promise((s=>{navigator.locks.request(`${this.#t}-${t}`,i,(e=>{if(log.debug(`acquired ${t} lock ${JSON.stringify(i)}`),s(e),e)return new Promise((s=>{this[`_${t}Lock`]=()=>{log.debug(`releasing ${t} lock ${JSON.stringify(i)}`),s(),this[`_${t}Lock`]=null}}))}))}))}async#m(t){await new Promise((i=>{const s=`${this.#t}-tx#-${t}`;navigator.locks.request(s,{mode:"shared"},(()=>(log.debug(`acquired tx lock ${t}`),i(),new Promise((i=>{this.#f=()=>{log.debug(`releasing tx lock ${t}`),i()}})))))}))}#b(){this.#F=this.#c,this.#p=BigInt(Math.trunc(Math.random()*Number.MAX_SAFE_INTEGER))}async#v(){for(const[t,{index:i}]of this.#S)log.debug(`Restoring WAL ${i} for page ${t}`),this.#g.add(i);this.#S.clear(),this.#F=0}async#I(){if(this.#F){const t=[];for(const[i,s]of this.#S)this.#x.set(i,s),t.push({page:i,index:s.index});this.#c=this.#F,this.#w.set(this.#n,t),"off"!==this.#o&&"normal"!==this.#o&&this.#u.flush();const i=idb.transaction("tx","readwrite");await idbX(i.objectStore("tx").put({path:this.#t,txId:this.#n++,salt:this.#p,nFrames:this.#h,dbPageCount:this.#c,pages:t.map((({page:t,index:i})=>[t,i]))})),i.commit()}this.#S.clear(),this.#F=0,this.#a>0&&this.#w.size>=this.#a&&await this.#$(!1)}async#C(){const t=idb.transaction("tx","readonly"),i=await idbX(t.objectStore("tx").getKey(IDBKeyRange.bound([this.#t],[this.#t,[]]))),s=i?.[1]??1/0;for(const[t,i]of this.#w){if(!(t<s))break;for(const{page:s,index:e}of i)log.debug(`removing WAL txId=${t} page=${s} index=${e}`),this.#x.get(s).txId===t&&this.#x.delete(s),this.#g.add(e);this.#w.delete(t)}const e=IDBKeyRange.bound([this.#t,this.#n],[this.#t,[]]),o=await idbX(t.objectStore("tx").getAll(e)),a=this.#h;if(this.#h=o[o.length-1]?.nFrames??a,0===this.#h)log.debug("WAL is empty"),this.#g.clear();else for(let t=a;t<this.#h;t++)this.#g.add(t);for(const t of o){if(t.pages){for(const[i,s]of t.pages)log.debug(`adding WAL txId=${t.txId} page=${i} index=${s}`),this.#x.set(i,{txId:t.txId,index:s}),this.#g.delete(s);this.#w.set(t.txId,t.pages.map((([t,i])=>({page:t,index:i}))))}this.#c=t.dbPageCount,this.#n=t.txId+1}}}const opfsRoot=navigator.storage.getDirectory();async function getPathComponents(t,i){try{const[s,e,o]=t.match(/[/]?(.*)[/](.*)$/);let a=await opfsRoot;for(const t of e.split("/"))t&&(a=await a.getDirectoryHandle(t,{create:i}));return[a,o]}catch(t){return[]}}function idbX(t){return new Promise(((i,s)=>{t.addEventListener("success",(()=>i(t.result))),t.addEventListener("error",(()=>s(t.error)))}))}class FletcherChecksum{h1=0;h2=0;update=(()=>t=>{for(const i of t)this.h1+=3735928559^i,this.h2+=this.h1;return this})();digest(){const t=this.h1%4294967295,i=this.h2%4294967295;return new Uint32Array([t,i])}}